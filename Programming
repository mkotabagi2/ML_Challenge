%%ONTIME2 was in csv mode. i saved it in xls format  and considered only
%%first hundred rows and also entered 0 value in empty cells.
[num,txt,raw]=xlsread("ONTIME2.xls",1);

txt(1,:)=[];
%%unique numeric value for each flight carrier. as the unique carrier is
%%found by considering 3 columns and they also contain string
i=1;
count=1;
num(1,20)=count;
while i<length(num)
carrier=txt(i,2);
id=num(i,3);
cid=txt(i,4);
i=i+1;
if(strcmp(carrier,txt(i,2)) && id==num(i,3) && strcmp(cid,txt(i,4)))
	count=count+0;
	num(i,20)=count;
else
	count=count+1;
	num(i,20)=count;
end
end

%%forming X and T matrix
X=[num(:,20),num(:,1),num(:,7),num(:,8),num(:,9),num(:,10),num(:,11),num(:,12),num(:,13),num(:,14),num(:,15),num(:,16),num(:,18),num(:,19),num(:,17)];
%T=num(:,17);

%%dividing the given data into training and testing data
%%randomly select the training set and testing set 
%N=75;%required number of rows
%c=randperm(length(X),N);%randomly selects 75 rows from the X
%train=X(c,:);% this will put the elected rows in c in to the table B
data_rand = X(randperm(size(X,1)),:);
tr=ceil(.75*length(data_rand));
te=length(data_rand)-tr;
trainingData= data_rand(1:tr,:);
testingData= data_rand(1:te,:);

%%forming X and T matrix
Ttr=trainingData(:,15);
Tte=testingData(:,15);
trainingData(:,15)=[];
testingData(:,15)=[];
X=trainingData;
T=Ttr;

%%convert T into -1 and 1 instead of 0 and 1
for i=1:length(X)
    if(T(i,1)==0)
        T(i,1)=-1;
    end
end

%%perpending X matrix with 1;(training data)
one=ones(length(X),1);
xa=[one,X];

%%finding W using training data
w=pinv(xa)*T;

%%perpending X matrix with 1;(testing data)
X=testingData;
T=Tte;
one=ones(length(X),1);
xa=[one,X];

%%verify T
temp=sign(xa*w);

%%check how many of originalT and calculated T match
%%find true class label and classified as
count00=0;count01=0;count10=0;count11=0;
for i=1:length(X)
    if(T(i,1)==-1 && temp(i,1)==-1)
        count00=count00+1;
        confusionMatrix(1,1)=count00;
        
    elseif(T(i,1)==-1 && temp(i,1)==1)
        count01=count01+1;
        confusionMatrix(1,2)=count01;
        
    elseif(T(i,1)==1 && temp(i,1)==-1)
        count10=count10+1;
        confusionMatrix(2,1)=count10;
        
    elseif(T(i,1)==1 && temp(i,1)==1)
        count11=count11+1;
        confusionMatrix(2,2)=count11;
        
    end
end
 
Accuracy=(confusionMatrix(2,2)+confusionMatrix(1,1))/(confusionMatrix(2,2)+confusionMatrix(1,1)+confusionMatrix(2,1)+confusionMatrix(1,2));

Sensitivity=confusionMatrix(2,2)/(confusionMatrix(2,2)+confusionMatrix(2,1));

Specificity=confusionMatrix(1,1)/(confusionMatrix(1,1)+confusionMatrix(1,2));

Positive_Predictive_Value=confusionMatrix(2,2)/(confusionMatrix(2,2)+confusionMatrix(1,2));
        
